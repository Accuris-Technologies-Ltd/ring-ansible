- name: Ensure /etc/ring exists
  file:
    name: /etc/ring
    state: directory
    mode: 0755
    owner: root
    group: root

- name: "Ensure the hostname is set in /etc/hostname"
  copy:
    dest: /etc/hostname
    content: "{{ inventory_hostname }}"

- name: "Install dbus for systemd hostname changes"
  apt: name={{ item }} state=latest
  with_items:
    - dbus
  when: ansible_distribution_release != "precise"

- name: "Ensure the hostname is set"
  hostname:
    name: "{{ inventory_hostname }}"

- name: "Add /etc/rc.local"
  template:
    src: rc.local.j2
    dest: /etc/rc.local

- name: "Generate /etc/hosts"
  template: src=hosts.j2 dest=/etc/hosts

- name: "Update /etc/ssh/ssh_known_hosts"
  copy:
    src=ssh_known_hosts
    dest=/etc/ssh/ssh_known_hosts
    owner=root
    group=root
    mode=0644

- name: "Add upstart-job"
  copy:
    src=upstart-job
    dest=/lib/init/upstart-job
    owner=root
    group=root
    mode=0755

- name: "Disable multiarch"
  file:
    path: /etc/dpkg/dpkg.cfg.d/multiarch
    state: absent

- name: "Update /etc/bash.bashrc"
  copy:
    src=bash.bashrc
    dest=/etc/bash.bashrc
    owner=root
    group=root
    mode=0644

- name: "Update pam configuration"
  copy:
    src=pam_{{ item }}
    dest=/etc/pam.d/{{ item }}
    owner=root
    group=root
    mode=0644
  with_items:
    - atd
    - cron
    - login
    - sshd
    - su

- name: "Set localtime"
  file:
    src: /usr/share/zoneinfo/UTC
    dest: /etc/localtime
    state: link
    force: true

- name: "Update timezone file"
  copy:
    src=timezone
    dest=/etc/timezone
    owner=root
    group=root
    mode=0644

- name: "Remove non-default root-anchor"
  file:
    path=/opt/root-anchor
    state=absent

- name: "check /etc/aliases existence"
  stat: path=/etc/aliases
  register: etc_aliases_file

- name: "create /etc/aliases"
  file: path=/etc/aliases
    owner=root
    group=root
    mode=0644
    state={{ "file" if etc_aliases_file.stat.exists else "touch"}}
  notify: running newaliases

- name: "Update /etc/aliases"
  lineinfile:
    dest: /etc/aliases
    regexp: '^{{ item.key }}\s*:'
    line: '{{ item.key }}: {{ item.value }}'
  notify: running newaliases
  when: etc_aliases_file.stat.exists == True
  with_dict: "{{ etc_aliases }}"

- name: Add cronjob to update /etc/ring/ring-nodes.txt
  template:
    src: cron.d/list_ring_nodes.j2
    dest: /etc/cron.d/list_ring_nodes

- name: Remove old cronjob for list_ring_nodes (temp)
  lineinfile:
    regexp: "list_of_nodes|/etc/ring/node-list.txt"
    state: absent
    dest: /var/spool/cron/crontabs/root

- name: "Update /etc/adduser.conf"
  copy:
    src=adduser.conf
    dest=/etc/adduser.conf
    owner=root
    group=root
    mode=0644

