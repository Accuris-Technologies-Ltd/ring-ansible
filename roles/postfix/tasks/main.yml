
- name: install postfix packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - "{{ postfix_packages }}"

- name: create postfix config
  template:
    src: "{{ item }}"
    dest: /etc/postfix/
  notify:
    - reload systemd
    - postfix reload service
  with_items:
    - main.cf
    - master.cf
    - smtp_reply_filter

- name: stat /etc/postfix/postfix-files
  stat: path=/etc/postfix/postfix-files
  register: etc_postfix_postfix_files

- name: move /etc/postfix/postfix-files.dpkg-dist
  command: /bin/mv /etc/postfix/postfix-files.dpkg-dist /etc/postfix/postfix-files
  when: etc_postfix_postfix_files.stat.exists == False and (ansible_distribution_release == 'xenial' or ansible_distribution_release == "bionic")

- name: check /etc/aliases existence
  stat: path=/etc/aliases
  register: etc_aliases_file

- name: create /etc/aliases
  file: path=/etc/aliases
    owner=root
    group=root
    mode=0644
    state={{ "file" if etc_aliases_file.stat.exists else "touch"}}
  notify: running newaliases

- name: update /etc/aliases
  lineinfile:
    dest: /etc/aliases
    regexp: '^{{ item.key }}\s*:'
    line: '{{ item.key }}: {{ item.value }}'
  notify: running newaliases
  when: etc_aliases_file.stat.exists == True
  with_dict: "{{ etc_aliases }}"

- name: reload systemd if needed
  meta: flush_handlers

- name: enable postfix service
  service:
    name: postfix
    enabled: yes
    state: started

