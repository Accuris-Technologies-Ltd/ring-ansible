- name: "Load software list"
  include_vars: install.yml

- name: "Uninstall certain unnecessary packages - except where mysql is needed"
  apt: name={{ item }} state=absent
  with_items:
    - apparmor
    - apparmor-utils
  when: need_mysql_server|default(None) != true

- name: "TAL selection (rpki-trust-anchors)"
  debconf:
    name: rpki-trust-anchors
    question: rpki-trust-anchors/get_arin_tal
    vtype: boolean
    value: False

- name: "Install various software packages (all)"
  apt: name={{ item }} state=latest
  with_items: "{{ software.all|default([]) }}"

- name: "Install various software packages ({{ ansible_distribution_release }})"
  apt: name={{ item }} state=latest
  with_items: "{{ vars['software'][ansible_distribution_release]|default(None) }}"

- name: "Create symlink for lft"
  file: src=/usr/sbin/lft dest=/usr/bin/lft state=link

- name: "Apply setuid root to some tools"
  file: path={{ item }} mode=4755
  with_items:
    - /bin/ping
    - /usr/sbin/lft

- name: "Apply setuid root to some tools (< bionic)"
  file: path={{ item }} mode=4755
  with_items:
    - /bin/ping6
  when: ansible_distribution_release != "bionic"

- name: "Allow ring-users to do wire capturing"
  file: path={{ item }} mode=0754 owner=root group=ring-users
  with_items:
    - /usr/sbin/tcpdump
    - /usr/bin/dumpcap

- name: "Get network capabilities for some tools"
  command: /sbin/getcap {{ item }}
  register: cap
  with_items:
    - /usr/sbin/hping3
    - /usr/bin/nmap
    - /usr/bin/nping
    - /usr/sbin/paris-traceroute
    - /usr/bin/traceroute.db
    - /usr/sbin/tcpdump
    - /usr/bin/dumpcap
  check_mode: no
  changed_when: false

- name: "Set new capabilities"
  vars:
    check_string: "{{ item.item }} = cap_net_admin,cap_net_raw+eip"
  command: /sbin/setcap cap_net_raw,cap_net_admin=eip {{ item.item }}
  when: item.stdout != check_string
  with_items: "{{ cap.results }}"

- name: "Get network capabilities for some tools (bionic)"
  command: /sbin/getcap {{ item }}
  register: capb
  with_items:
    - /usr/bin/mtr-packet
  check_mode: no
  changed_when: false
  when: ansible_distribution_release == "bionic"

- name: "Set new capabilities (bionic)"
  vars:
    check_string: "{{ item.item }} = cap_net_admin,cap_net_raw+eip"
  command: /sbin/setcap cap_net_raw,cap_net_admin=eip {{ item.item }}
  when: ansible_distribution_release == "bionic" and item.stdout != check_string
  with_items: "{{ capb.results }}"

- name: "Uninstall certain unnecessary packages"
  apt: name={{ item }} state=absent
  with_items:
    - ferm
    - molly-guard
    - mtr
    - pppoe
    - ppp
    - pppconfig
    - pppoeconfig
    - resolvconf
    - sl
    - ufw
    - rpcbind

