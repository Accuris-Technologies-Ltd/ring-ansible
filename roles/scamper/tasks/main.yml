- name: Create scamper user
  user: name=scamper comment="Scamper measurements" uid=2001 group="ring-users"

- name: Set up authorized_keys for the scamper user
  authorized_key: user=scamper key="{{ item }}" state=present
  with_file:
    - ../keys/scamper.pub

- name: Install scamper packages
  package: name={{ item }} state=latest
  with_items:
    - libscamperfile0
    - scamper

- name: Create /home/scamper/traces
  file: name=/home/scamper/traces state=directory owner=scamper

- name: Create scamper upstart
  template: src=scamper.conf dest=/etc/init/scamper.conf owner=root group=root mode=0644
  when: ansible_distribution_release == 'precise'

- name: "Create scamper systemd"
  template:
    src: scamper-sysd.conf
    dest: /lib/systemd/system/scamper.service
    owner: root
    group: root
    mode: 0644
  notify: reload systemd
  when: ansible_distribution_release == 'xenial'

- name: "Delete old scamper files"
  file: name="{{ item }}" state=absent
  with_items:
    - /etc/init/scamper.conf
    - /lib/systemd/system/scamper.conf
  when: ansible_distribution_release == 'xenial'

- name: Create /home/scamper/run-traces.sh
  template: src=run-traces.sh dest=/home/scamper/run-traces.sh owner=scamper group="ring-users" mode=0755

- name: Create /etc/cron.d/scamper
  template:
    src: cron.d/scamper
    dest: /etc/cron.d/scamper
    owner: root
    group: root
    mode: 0644

- name: clean up old cron entry comments
  lineinfile:
    dest: "{{ item }}"
    regexp: "(run_scamper|/home/scamper/run-traces|cleanup_scamper|find /home/scamper/traces)"
    state: absent
  with_items:
    - /var/spool/cron/crontabs/scamper
    - /var/spool/cron/crontabs/root

- name: reload systemd if needed
  meta: flush_handlers

- name: Scamper service
  service: name=scamper state=stopped enabled=yes
